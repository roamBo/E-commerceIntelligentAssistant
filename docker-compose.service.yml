
services:
  order-service:
    build:
      context: ./java-services/order-service
      dockerfile: Dockerfile
    container_name: order-service
    ports:
      - "8083:8083"
    environment:
      SPRING_DATASOURCE_URL: "jdbc:mysql://mysql-test:3306/ecommerce_order_db?allowPublicKeyRetrieval=true&useSSL=false&serverTimezone=UTC"
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT: org.hibernate.dialect.MySQL8Dialect
      SPRING_DATASOURCE_USERNAME: "root"
      SPRING_DATASOURCE_PASSWORD: "20040412mzq"
      SPRING_CLOUD_NACOS_DISCOVERY_SERVER-ADDR: "nacos-test:8848"
    networks:
      - backend

  payment-service:
    build:
      context: ./java-services/payment-service
      dockerfile: Dockerfile
    container_name: payment-service
    ports:
      - "8081:8081"
    environment:
      SPRING_REDIS_HOST: "redis-test"
      SPRING_REDIS_PORT: "6379"
      SPRING_CLOUD_NACOS_DISCOVERY_SERVER-ADDR: "nacos-test:8848"
    networks:
      - backend


  product-service:
    build:
      context: ./java-services/product-service
      dockerfile: Dockerfile
    container_name: product-service
    ports:
      - "8082:8082"
    environment:
      SPRING_ELASTICSEARCH_URIS: "http://elasticsearch-test:9200"
      SPRING_CLOUD_NACOS_DISCOVERY_SERVER-ADDR: "nacos-test:8848"
    networks:
      - backend


  service-gateway:
    build:
      context: ./java-services/services-gateway
      dockerfile: Dockerfile
    container_name: services-gateway
    ports:
      - "8084:8084"
    environment:
      SPRING_CLOUD_NACOS_DISCOVERY_SERVER-ADDR: "nacos-test:8848"
    networks:
      - backend


  # Python 代理服务
  reorganized:
    build:
      context: ./python-agents/reorganized
      dockerfile: Dockerfile
    container_name: reorganized
    ports:
      - "8085:8085"
    volumes:
      - ./python-agents/reorganized:/app
    environment:
      - REDIS_URL=redis://redis-test:6379/0
    working_dir: /app
    command: python main.py
    networks:
      - backend
    depends_on:
      - product-service
      - order-service
      - payment-service

  # 前端服务
  frontend-console:
    build:
      context: ./frontend-console/vue-page
      dockerfile: Dockerfile
    container_name: frontend-console
    ports:
      - "80:5173"  # 将宿主机 80 映射到 Vite 默认开发端口 5173
    volumes:
      - ./frontend-console/vue-page:/app     # 映射项目代码目录
      - /app/node_modules                    # 避免宿主机 node_modules 覆盖容器内依赖
    environment:
      - CHOKIDAR_USEPOLLING=true             # 启用轮询监听，兼容 Docker 宿主机文件变更
    working_dir: /app
    command: npm run dev
    networks:
      - backend
    depends_on:
      - service-gateway


networks:
  backend:
    driver: bridge
